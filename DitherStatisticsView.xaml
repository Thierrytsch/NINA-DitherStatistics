<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="DitherStatistics.Plugin.DitherStatisticsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="400">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <!-- NINA StandardCheckBox Style - exact copy from NINA source -->
        <Style x:Key="ToggleSwitchStyle" TargetType="CheckBox">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="65" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <!-- Track -->
                            <Border
                                x:Name="SwitchTrack"
                                Background="Transparent"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="12.5" />
                            <Grid>
                                <TextBlock
                                    x:Name="OnText"
                                    Margin="8,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontWeight="Bold"
                                    Foreground="{DynamicResource ButtonForegroundBrush}"
                                    Text="ON"
                                    Visibility="Collapsed" />
                                <TextBlock
                                    x:Name="OffText"
                                    Margin="0,0,8,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource PrimaryBrush}"
                                    Text="OFF"
                                    Visibility="Visible" />
                            </Grid>
                            <!-- Thumb -->
                            <Ellipse
                                x:Name="SwitchThumb"
                                Width="21"
                                Height="21"
                                Margin="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Fill="{DynamicResource SecondaryBackgroundBrush}" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="SwitchTrack" Property="Background" Value="{DynamicResource TertiaryBackgroundBrush}" />
                                <Setter TargetName="SwitchThumb" Property="HorizontalAlignment" Value="Right" />
                                <Setter TargetName="OnText" Property="Visibility" Value="Visible" />
                                <Setter TargetName="OffText" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="SwitchTrack" Property="Background" Value="Transparent" />
                                <Setter TargetName="SwitchThumb" Property="HorizontalAlignment" Value="Left" />
                                <Setter TargetName="OnText" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="OffText" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="SwitchTrack" Property="Opacity" Value="0.4" />
                                <Setter TargetName="SwitchThumb" Property="Opacity" Value="0.4" />
                                <Setter TargetName="OnText" Property="Opacity" Value="0.4" />
                                <Setter TargetName="OffText" Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="QualityButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                Padding="{TemplateBinding Padding}">
                            <TextBlock x:Name="contentText"
                                      Text="{TemplateBinding Content}"
                                      Foreground="{TemplateBinding Foreground}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBackgroundSelectedBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBackgroundSelectedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Background="{DynamicResource BackgroundBrush}">
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="10">

                <!-- Pixel Shift Chart (ScottPlot) with Tooltip Overlay -->
                <Border Background="{DynamicResource SecondaryBackgroundBrush}" 
                       BorderBrush="{DynamicResource BorderBrush}" 
                       BorderThickness="1" 
                       Padding="10" 
                       Margin="0,0,0,10">
                    <StackPanel>
                        <TextBlock Text="Pixel Shift" 
                                  FontSize="14" 
                                  FontWeight="SemiBold" 
                                  Foreground="{DynamicResource PrimaryBrush}"
                                  Margin="0,0,0,10"/>

                        <!-- Grid for Chart + Tooltip Overlay -->
                        <Grid Height="300">
                            <!-- ScottPlot WpfPlot Control -->
                            <ContentControl Content="{Binding PixelShiftPlot}"/>

                            <!-- Tooltip Overlay -->
                            <Border BorderBrush="#FF00A0FF" 
                                   BorderThickness="2"
                                   CornerRadius="3"
                                   Padding="8"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Margin="10"
                                   Opacity="0.95"
                                   Background="{DynamicResource TertiaryBackgroundBrush}"
                                   Visibility="{Binding PixelShiftTooltipVisible, Converter={StaticResource BoolToVis}}">
                                <TextBlock Text="{Binding PixelShiftTooltipText}"
                                          Foreground="{DynamicResource PrimaryBrush}"
                                          FontSize="13"
                                          FontWeight="SemiBold"/>
                            </Border>
                        </Grid>
                    </StackPanel>
                </Border>

                <!-- Settle Time Chart (ScottPlot) with Tooltip Overlay -->
                <Border Background="{DynamicResource SecondaryBackgroundBrush}" 
                       BorderBrush="{DynamicResource BorderBrush}" 
                       BorderThickness="1" 
                       Padding="10" 
                       Margin="0,0,0,10">
                    <StackPanel>
                        <TextBlock Text="Settle Time History" 
                                  FontSize="14" 
                                  FontWeight="SemiBold" 
                                  Foreground="{DynamicResource PrimaryBrush}"
                                  Margin="0,0,0,10"/>

                        <!-- Grid for Chart + Tooltip Overlay -->
                        <Grid Height="150">
                            <!-- ScottPlot WpfPlot Control -->
                            <ContentControl Content="{Binding SettleTimePlot}"/>

                            <!-- Tooltip Overlay -->
                            <Border BorderBrush="#FF1E90FF" 
                                   BorderThickness="2"
                                   CornerRadius="3"
                                   Padding="8"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Margin="10"
                                   Opacity="0.95"
                                   Background="{DynamicResource TertiaryBackgroundBrush}"
                                   Visibility="{Binding SettleTimeTooltipVisible, Converter={StaticResource BoolToVis}}">
                                <TextBlock Text="{Binding SettleTimeTooltipText}"
                                          Foreground="{DynamicResource PrimaryBrush}"
                                          FontSize="13"
                                          FontWeight="SemiBold"/>
                            </Border>
                        </Grid>

                        <!-- Legend unter dem Chart -->
                        <StackPanel Orientation="Horizontal" 
                                   HorizontalAlignment="Center" 
                                   Margin="0,8,0,0">
                            <!-- Settle Time -->
                            <StackPanel Orientation="Horizontal" Margin="0,0,15,0">
                                <Ellipse Width="10" Height="10" 
                                        Fill="DodgerBlue" 
                                        VerticalAlignment="Center"
                                        Margin="0,0,4,0"/>
                                <TextBlock Text="Settle Time" 
                                          FontSize="10" 
                                          Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                          VerticalAlignment="Center"/>
                            </StackPanel>

                            <!-- Average -->
                            <StackPanel Orientation="Horizontal" Margin="0,0,15,0">
                                <Rectangle Width="14" Height="2" 
                                          Fill="Red" 
                                          VerticalAlignment="Center"
                                          Margin="0,0,4,0">
                                    <Rectangle.OpacityMask>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="Red" Offset="0.0"/>
                                            <GradientStop Color="Transparent" Offset="0.3"/>
                                            <GradientStop Color="Red" Offset="0.4"/>
                                            <GradientStop Color="Transparent" Offset="0.6"/>
                                            <GradientStop Color="Red" Offset="0.7"/>
                                            <GradientStop Color="Transparent" Offset="1.0"/>
                                        </LinearGradientBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Text="Average" 
                                          FontSize="10" 
                                          Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                          VerticalAlignment="Center"/>
                            </StackPanel>

                            <!-- Avg ± StdDev -->
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="14" Height="2" 
                                          VerticalAlignment="Center"
                                          Margin="0,0,4,0">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="Red" Opacity="0.5"/>
                                    </Rectangle.Fill>
                                    <Rectangle.OpacityMask>
                                        <DrawingBrush TileMode="Tile" Viewport="0,0,3,2" ViewportUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <GeometryDrawing Brush="Red">
                                                    <GeometryDrawing.Geometry>
                                                        <RectangleGeometry Rect="0,0,1,2"/>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Text="Avg ± StdDev" 
                                          FontSize="10" 
                                          Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                          VerticalAlignment="Center"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <!-- KOMPAKTE Statistics Panel - 2 Zeilen -->
                <Border Background="{DynamicResource SecondaryBackgroundBrush}" 
                       BorderBrush="{DynamicResource BorderBrush}" 
                       BorderThickness="1" 
                       Padding="15" 
                       Margin="0,0,0,10">
                    <StackPanel>
                        <TextBlock Text="Statistics" 
                                  FontSize="14" 
                                  FontWeight="SemiBold" 
                                  Foreground="{DynamicResource PrimaryBrush}"
                                  Margin="0,0,0,10"/>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Zeile 1: Dithers (volle Breite) -->
                            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" 
                                      Margin="0,0,0,6">
                                <Run Text="Dithers: " Foreground="{DynamicResource ButtonForegroundDisabledBrush}"/>
                                <Run Text="{Binding TotalDithers, Mode=OneWay}" 
                                     Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold"/>
                                <Run Text="/" Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold"/>
                                <Run Text="{Binding SuccessfulDithers, Mode=OneWay}" 
                                     Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold"/>
                                <Run Text="/" Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold"/>
                                <Run Text="{Binding SuccessRate, StringFormat='{}{0:F1}%', Mode=OneWay}" 
                                     Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold"/>
                                <Run Text=" (Total/Success/Rate)" FontSize="11">
                                    <Run.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ButtonForegroundDisabledColor}" Opacity="0.7"/>
                                    </Run.Foreground>
                                </Run>
                            </TextBlock>

                            <!-- Zeile 2, Links: Median -->
                            <TextBlock Grid.Row="1" Grid.Column="0" 
                                      Margin="0,0,10,0">
                                <Run Text="Median: " Foreground="{DynamicResource ButtonForegroundDisabledBrush}"/>
                                <Run Text="{Binding MedianSettleTime, StringFormat='{}{0:F2}s', Mode=OneWay}" 
                                     Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold"/>
                                <Run Text=", (Min: " FontSize="11">
                                    <Run.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ButtonForegroundDisabledColor}" Opacity="0.7"/>
                                    </Run.Foreground>
                                </Run>
                                <Run Text="{Binding MinSettleTime, StringFormat='{}{0:F2}s', Mode=OneWay}" 
                                     Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold" FontSize="11"/>
                                <Run Text=" / Max: " FontSize="11">
                                    <Run.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ButtonForegroundDisabledColor}" Opacity="0.7"/>
                                    </Run.Foreground>
                                </Run>
                                <Run Text="{Binding MaxSettleTime, StringFormat='{}{0:F2}s', Mode=OneWay}" 
                                     Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold" FontSize="11"/>
                                <Run Text=")" FontSize="11">
                                    <Run.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ButtonForegroundDisabledColor}" Opacity="0.7"/>
                                    </Run.Foreground>
                                </Run>
                            </TextBlock>

                            <!-- Zeile 2, Rechts: Drift -->
                            <TextBlock Grid.Row="1" Grid.Column="1">
                                <Run Text="Drift: X: " Foreground="{DynamicResource ButtonForegroundDisabledBrush}"/>
                                <Run Text="{Binding TotalDriftX, StringFormat='{}{0:F2}px', Mode=OneWay}" 
                                     Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold"/>
                                <Run Text=" / Y: " Foreground="{DynamicResource ButtonForegroundDisabledBrush}"/>
                                <Run Text="{Binding TotalDriftY, StringFormat='{}{0:F2}px', Mode=OneWay}" 
                                     Foreground="{DynamicResource PrimaryBrush}" FontWeight="Bold"/>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                </Border>

                <!-- Quality Metrics Panel - Shown when enough data -->
                <Border Background="{DynamicResource SecondaryBackgroundBrush}" 
                       BorderBrush="{DynamicResource BorderBrush}" 
                       BorderThickness="1" 
                       Padding="15" 
                       Margin="0,0,0,10"
                       Visibility="{Binding ShowQualityAssessment, Converter={StaticResource BoolToVis}, Mode=OneWay}">
                    <StackPanel>
                        <!-- Header with Overall Rating und EXPERIMENTAL Badge -->
                        <Grid Margin="0,0,0,15">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- Title mit Experimental Badge -->
                            <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock Text="📊 Dither Quality Assessment"
                                          FontSize="14"
                                          FontWeight="Bold"
                                          Foreground="{DynamicResource PrimaryBrush}"
                                          VerticalAlignment="Center"
                                          Margin="0,0,8,0"/>

                                <!-- EXPERIMENTAL Badge -->
                                <Border Background="#D32F2F"
                                        CornerRadius="3"
                                        Padding="6,2"
                                        VerticalAlignment="Center">
                                    <TextBlock Text="EXPERIMENTAL"
                                              FontSize="9"
                                              FontWeight="Bold"
                                              Foreground="White"
                                              VerticalAlignment="Center"/>
                                </Border>
                            </StackPanel>

                            <!-- Overall Rating Badge -->
                            <Border Grid.Column="1"
                                    CornerRadius="10"
                                    Padding="10,4"
                                    Margin="0,0,8,0">
                                <Border.Background>
                                    <SolidColorBrush Color="{Binding QualityRatingColor, Mode=OneWay}"/>
                                </Border.Background>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding QualityResult.QualityRating, Mode=OneWay}"
                                              FontWeight="Bold"
                                              FontSize="12"
                                              Foreground="White"
                                              Margin="0,0,6,0"/>
                                    <TextBlock Text="{Binding CombinedScoreValue, Mode=OneWay}"
                                              FontSize="12"
                                              Foreground="White"
                                              Opacity="0.9"/>
                                </StackPanel>
                            </Border>

                            <!-- Toggle Button for Quality Assessment -->
                            <CheckBox Grid.Column="2"
                                     IsChecked="{Binding IsQualityAssessmentEnabled, Mode=TwoWay}"
                                     VerticalAlignment="Center"
                                     Margin="0,0,5,0"
                                     ToolTip="Enable/Disable Quality Assessment"
                                     Style="{DynamicResource ToggleSwitchStyle}"/>
                        </Grid>

                        <!-- Primary Metrics Grid -->
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Centered L2 Discrepancy -->
                            <Border Grid.Column="0"
                                    Background="{DynamicResource TertiaryBackgroundBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="3"
                                    Padding="8"
                                    Margin="0,0,4,0">
                                <StackPanel>
                                    <TextBlock Text="CD*"
                                              FontSize="9"
                                              Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                              Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding CDValue, Mode=OneWay}"
                                              FontSize="14"
                                              FontWeight="Bold"
                                              Foreground="{DynamicResource PrimaryBrush}"
                                              HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding CDRating, Mode=OneWay}"
                                              FontSize="10"
                                              Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                              HorizontalAlignment="Center"
                                              Margin="0,2,0,0"/>
                                </StackPanel>
                            </Border>

                            <!-- Voronoi CV -->
                            <Border Grid.Column="1"
                                    Background="{DynamicResource TertiaryBackgroundBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="3"
                                    Padding="8"
                                    Margin="0,0,4,0">
                                <StackPanel>
                                    <TextBlock Text="VCV*"
                                              FontSize="9"
                                              Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                              Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding VoronoiValue, Mode=OneWay}"
                                              FontSize="14"
                                              FontWeight="Bold"
                                              Foreground="{DynamicResource PrimaryBrush}"
                                              HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding VoronoiRating, Mode=OneWay}"
                                              FontSize="10"
                                              Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                              HorizontalAlignment="Center"
                                              Margin="0,2,0,0"/>
                                </StackPanel>
                            </Border>

                            <!-- NNI -->
                            <Border Grid.Column="2"
                                    Background="{DynamicResource TertiaryBackgroundBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="3"
                                    Padding="8">
                                <StackPanel>
                                    <TextBlock Text="NNI*"
                                              FontSize="9"
                                              Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                              Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding NNIValue, Mode=OneWay}"
                                              FontSize="14"
                                              FontWeight="Bold"
                                              Foreground="{DynamicResource PrimaryBrush}"
                                              HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding NNIRating, Mode=OneWay}"
                                              FontSize="10"
                                              Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                              HorizontalAlignment="Center"
                                              Margin="0,2,0,0"/>
                                </StackPanel>
                            </Border>
                        </Grid>

                        <!-- Drizzle Gap-Fill Metrics -->
                        <StackPanel Margin="0,0,0,10">
                            <TextBlock Text="🔬 Drizzle Gap-Fill Prediction (Sub-pixel Coverage)"
                                      FontSize="10"
                                      FontWeight="SemiBold"
                                      Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                      Margin="0,0,0,6"/>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- 1x Drizzle -->
                                <Border Grid.Column="0"
                                        Background="{DynamicResource TertiaryBackgroundBrush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="3"
                                        Padding="8"
                                        Margin="0,0,4,0">
                                    <StackPanel>
                                        <TextBlock Text="1× Drizzle"
                                                  FontSize="9"
                                                  Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                                  HorizontalAlignment="Center"
                                                  Margin="0,0,0,2"/>
                                        <TextBlock Text="{Binding GFM1xValue, Mode=OneWay}"
                                                  FontSize="13"
                                                  FontWeight="Bold"
                                                  Foreground="{DynamicResource PrimaryBrush}"
                                                  HorizontalAlignment="Center"/>
                                        <TextBlock Text="{Binding GFM1xTarget, Mode=OneWay}"
                                                  FontSize="9"
                                                  Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                                  HorizontalAlignment="Center"
                                                  Margin="0,2,0,0"/>
                                    </StackPanel>
                                </Border>

                                <!-- 2x Drizzle -->
                                <Border Grid.Column="1"
                                        Background="{DynamicResource TertiaryBackgroundBrush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="3"
                                        Padding="8"
                                        Margin="0,0,4,0">
                                    <StackPanel>
                                        <TextBlock Text="2× Drizzle"
                                                  FontSize="9"
                                                  Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                                  HorizontalAlignment="Center"
                                                  Margin="0,0,0,2"/>
                                        <TextBlock Text="{Binding GFM2xValue, Mode=OneWay}"
                                                  FontSize="13"
                                                  FontWeight="Bold"
                                                  Foreground="{DynamicResource PrimaryBrush}"
                                                  HorizontalAlignment="Center"/>
                                        <TextBlock Text="{Binding GFM2xTarget, Mode=OneWay}"
                                                  FontSize="9"
                                                  Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                                  HorizontalAlignment="Center"
                                                  Margin="0,2,0,0"/>
                                    </StackPanel>
                                </Border>

                                <!-- 3x Drizzle -->
                                <Border Grid.Column="2"
                                        Background="{DynamicResource TertiaryBackgroundBrush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="3"
                                        Padding="8">
                                    <StackPanel>
                                        <TextBlock Text="3× Drizzle"
                                                  FontSize="9"
                                                  Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                                  HorizontalAlignment="Center"
                                                  Margin="0,0,0,2"/>
                                        <TextBlock Text="{Binding GFM3xValue, Mode=OneWay}"
                                                  FontSize="13"
                                                  FontWeight="Bold"
                                                  Foreground="{DynamicResource PrimaryBrush}"
                                                  HorizontalAlignment="Center"/>
                                        <TextBlock Text="{Binding GFM3xTarget, Mode=OneWay}"
                                                  FontSize="9"
                                                  Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                                  HorizontalAlignment="Center"
                                                  Margin="0,2,0,0"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </StackPanel>

                        <!-- Recommendation -->
                        <Border Background="{DynamicResource TertiaryBackgroundBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="3"
                                Padding="10"
                                Margin="0,0,0,10">
                            <StackPanel>
                                <TextBlock Text="💡 Recommendation"
                                          FontSize="10"
                                          FontWeight="SemiBold"
                                          Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                          Margin="0,0,0,4"/>
                                <TextBlock Text="{Binding QualityResult.Recommendation, Mode=OneWay}"
                                          FontSize="10"
                                          TextWrapping="Wrap"
                                          Foreground="{DynamicResource PrimaryBrush}"
                                          LineHeight="14"/>
                            </StackPanel>
                        </Border>

                        <!-- Action Buttons -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                      VerticalAlignment="Center"
                                      Margin="2,0,0,0">
                                <Run Text="Based on"
                                     FontSize="9">
                                    <Run.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ButtonForegroundDisabledColor}" Opacity="0.7"/>
                                    </Run.Foreground>
                                </Run>
                                <Run Text="{Binding QualityResult.TotalDithers, StringFormat='{}{0} dithers', Mode=OneWay}"
                                     Foreground="{DynamicResource ButtonForegroundDisabledBrush}"
                                     FontSize="9"
                                     FontWeight="SemiBold"/>
                            </TextBlock>

                            <StackPanel Grid.Column="1"
                                       Orientation="Horizontal">
                                <Button Content="🔄 Recalc"
                                        Command="{Binding RecalculateMetricsCommand}"
                                        Style="{StaticResource QualityButton}"
                                        Margin="0,0,4,0"
                                        ToolTip="Recalculate quality metrics"/>

                                <Button Content="💾 Export"
                                        Command="{Binding ExportMetricsCommand}"
                                        Style="{StaticResource QualityButton}"
                                        ToolTip="Export detailed report (TXT)"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Border>

                <!-- Info Box when Quality Assessment is disabled or not enough dithers -->
                <Border Background="{DynamicResource SecondaryBackgroundBrush}"
                       BorderBrush="{DynamicResource BorderBrush}"
                       BorderThickness="1"
                       Padding="20"
                       Margin="0,0,0,10">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <!-- Show when Quality Assessment is disabled OR when enabled but not enough data -->
                                <DataTrigger Binding="{Binding ShowQualityAssessment, Mode=OneWay}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Content (centered) -->
                        <StackPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Text="📊"
                                      FontSize="20"
                                      HorizontalAlignment="Center"
                                      Margin="0,0,0,8"/>
                            <TextBlock Text="Quality Assessment"
                                      FontSize="12"
                                      FontWeight="SemiBold"
                                      HorizontalAlignment="Center"
                                      Foreground="{DynamicResource PrimaryBrush}"
                                      Margin="0,0,0,4"/>
                            <!-- Show different text based on state -->
                            <TextBlock FontSize="10"
                                      HorizontalAlignment="Center"
                                      Foreground="{DynamicResource ButtonForegroundDisabledBrush}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="Requires at least 4 dither events"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShowQualityDisabledMessage, Mode=OneWay}" Value="True">
                                                <Setter Property="Text" Value="Quality Assessment disabled"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>

                        <!-- Toggle Button at top right -->
                        <CheckBox Grid.Row="0" Grid.Column="1"
                                 IsChecked="{Binding IsQualityAssessmentEnabled, Mode=TwoWay}"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Top"
                                 Margin="0,0,5,0"
                                 ToolTip="Enable/Disable Quality Assessment"
                                 Style="{DynamicResource ToggleSwitchStyle}"/>
                    </Grid>
                </Border>

                <!-- Action Buttons -->
                <Border Background="{DynamicResource SecondaryBackgroundBrush}" 
                       BorderBrush="{DynamicResource BorderBrush}" 
                       BorderThickness="1" 
                       Padding="10">
                    <StackPanel>
                        <TextBlock Text="Actions" 
                                  FontSize="14" 
                                  FontWeight="SemiBold" 
                                  Foreground="{DynamicResource PrimaryBrush}"
                                  Margin="0,0,0,10"/>

                        <UniformGrid Columns="1" Rows="2">
                            <Button Content="Clear Data" 
                                   Command="{Binding ClearDataCommand}" 
                                   Style="{StaticResource QualityButton}"
                                   Padding="10,8"
                                   Margin="0,0,0,5"/>

                            <Button Content="📄 Export Events CSV" 
                                   Command="{Binding ExportDitherEventsCsvCommand}" 
                                   Style="{StaticResource QualityButton}"
                                   Padding="10,8"
                                   ToolTip="Export dither events to CSV (timestamps, pixel shifts, settle times)"/>
                        </UniformGrid>
                    </StackPanel>
                </Border>

            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
